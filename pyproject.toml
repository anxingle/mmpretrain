[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "mmpretrain"
description = "OpenMMLab Model Pretraining Toolbox and Benchmark"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "Apache License 2.0"}
authors = [
    {name = "MMPretrain Contributors", email = "openmmlab@gmail.com"},
]
keywords = [
    "computer vision", 
    "image classification", 
    "unsupervised learning", 
    "self-supervised learning"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dynamic = ["version"]

# Runtime dependencies
dependencies = [
    "albumentations>=2.0.8",
    "einops",
    "importlib-metadata",
    "mat4py",
    "matplotlib",
    "mmcv>=2.0.0,<2.4.0",
    "mmengine>=0.8.3,<1.0.0",
    "modelindex",
    "numpy",
    "rich",
    "torch>=2.8.0", # 确保支持 CUDA 12.9+
    "torchvision>=0.23.0",
]

[project.optional-dependencies]
# Optional dependencies
optional = [
    "albumentations>=0.3.2",
    "grad-cam>=1.3.7,<1.5.0",
    "requests",
    "scikit-learn",
]

# Test dependencies
tests = [
    "coverage",
    "interrogate", 
    "pytest",
]

# Multi-modal dependencies
multimodal = [
    "pycocotools",
    "transformers>=4.28.0",
]

# MMInstall dependencies (OpenMMLab ecosystem)
mim = [
    "mmcv>=2.0.0,<2.4.0",
    "mmengine>=0.8.3,<1.0.0",
]

# All dependencies combined
all = [
    "einops",
    "importlib-metadata", 
    "mat4py",
    "matplotlib",
    "modelindex",
    "numpy",
    "rich",
    "torch>=2.8.0",  # 确保支持 CUDA 12.9+
    "torchvision>=0.23.0",
    "albumentations>=0.3.2",
    "grad-cam>=1.3.7,<1.5.0", 
    "requests",
    "scikit-learn",
    "coverage",
    "interrogate",
    "pytest", 
    "pycocotools",
    "transformers>=4.28.0",
    "mmcv>=2.0.0,<2.4.0",
    "mmengine>=0.8.3,<1.0.0",
]

[project.urls]
Homepage = "https://github.com/open-mmlab/mmpretrain"
Repository = "https://github.com/open-mmlab/mmpretrain"

[tool.setuptools]
packages = ["mmpretrain"]

[tool.setuptools.dynamic]
version = {attr = "mmpretrain.version.__version__"}

[tool.uv]
# UV 特定配置
dev-dependencies = [
    "pytest>=6.0",
    "coverage>=5.0",
    "interrogate",
]

[tool.uv.sources]
# 可以在这里指定特定的源或版本控制依赖
# 
# 针对 CUDA 12.9+ 支持的选项:
# 1. 使用 PyTorch nightly 版本 (可能支持更新的 CUDA):
#    torch = { index = "pytorch-nightly" }
#    torchvision = { index = "pytorch-nightly" }
#
# 2. 或从源代码构建 (需要手动安装):
#    torch = { git = "https://github.com/pytorch/pytorch.git", tag = "v2.8.0" }
#
# 当前使用稳定版本 PyTorch 2.8.0，支持 CUDA 12.8
# 对于 CUDA 12.9+，建议使用 nightly 版本或等待官方稳定版本
